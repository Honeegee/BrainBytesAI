networks:
  app-network:
    driver: bridge

services:
  # AI Service container
  ai-service:
    build: ./ai-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=staging
      - NODE_OPTIONS=--max_old_space_size=2048
      - PORT=3002
      - GROQ_API_KEY=${STAGING_AI_API_KEY}
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=50
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - app-network
    restart: unless-stopped

  # Frontend container
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=staging
      - NODE_OPTIONS=--max_old_space_size=1024  
    deploy:
      resources:
        limits:
          memory: 1G  
        reservations:
          memory: 512M  
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped  

  # Backend API container
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=staging
      - NODE_OPTIONS=--max_old_space_size=1024
      - DATABASE_URL=${STAGING_DATABASE_URL}
      - JWT_SECRET=${STAGING_JWT_SECRET}
      - SESSION_SECRET=${STAGING_SESSION_SECRET}
      - PORT=3000
    deploy:
      resources:
        limits:
          memory: 1G  
        reservations:
          memory: 512M  
    networks:
      - app-network
    depends_on:
      - ai-service
    restart: unless-stopped

# All services now connect to MongoDB Atlas
# No local volumes needed for database
volumes: {}