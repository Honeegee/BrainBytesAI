# AI Service Configuration
PORT=3002
NODE_ENV=development
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX=50

# AI Provider Configuration (choose one or multiple)
# Priority: OPENAI > GROQ > OLLAMA > MOCK

# Option 1: OpenAI (Most reliable, requires paid API key)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-3.5-turbo
# OPENAI_MODEL=gpt-4
# OPENAI_MODEL=gpt-4-turbo

# Option 2: Groq (Fast, free tier available)
GROQ_API_KEY=your_groq_api_key_here
GROQ_MODEL=llama3-8b-8192
# GROQ_MODEL=llama3-70b-8192
# GROQ_MODEL=mixtral-8x7b-32768
# GROQ_MODEL=gemma-7b-it

# Option 3: Ollama (Local, completely free)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.2
# OLLAMA_MODEL=mistral
# OLLAMA_MODEL=codellama
# OLLAMA_MODEL=phi3

# Option 4: Anthropic Claude (Alternative to OpenAI)
ANTHROPIC_API_KEY=your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-haiku-20240307
# ANTHROPIC_MODEL=claude-3-sonnet-20240229

# Option 5: Google Gemini (Free tier available)
GOOGLE_API_KEY=your_google_api_key_here
GOOGLE_MODEL=gemini-1.5-flash
# GOOGLE_MODEL=gemini-1.5-pro

# Fallback Configuration
USE_MOCK_AI=true  # Set to true to use mock responses when no API keys are configured
FALLBACK_TO_MOCK=true  # Auto-fallback to mock if APIs fail

# Instructions:
# 1. Copy this file to .env
# 2. Choose your preferred AI provider and add the API key
# 3. Set USE_MOCK_AI=false when you have a working API key
# 4. Never commit your actual .env file to version control

# Recommended setup for development:
# - Start with OLLAMA (free, local) or GROQ (free tier)
# - For production, use OPENAI or ANTHROPIC
